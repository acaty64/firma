#docker-compose.yml

version: '3.7'

services:
  # PHP-FPM - Service
  app:
    build:
      context: ./docker
      dockerfile: Dockerfile
    image: firma/app2
    container_name: app_app
    restart: unless-stopped
    tty: true
    working_dir: /var/www

    ports:
      - "${APP_PORT}:80"

    volumes:
      - ./:/var/www
      - ./docker/config-files/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./docker/config-files/ImageMagick-6/policy.xml:/etc/ImageMagick-6/policy.xml

    networks:
      - app_01-network

  # NGINX - Service
  webserver:
    image: nginx:alpine
    container_name: webserver_01
    restart: unless-stopped
    tty: true

    ports:
      - "80:80"
      - "8143:443"

    volumes:
      - ./:/var/www
      - ./docker/config-files/nginx/conf.d/app.conf:/etc/nginx/conf.d/app.conf

    networks:
      - app_01-network

  # MySql - Service
  mysql:
    image: mysql:5.7
    container_name: db_01
    restart: unless-stopped
    tty: true

    ports:
      - "3306:3306"

    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"

    volumes:
      - mysqldata:/var/lib/mysql
      - ./docker/config-files/mysql/my.cnf:/etc/mysql/my.cnf

    networks:
      - app_01-network

# Volumes
volumes:
  mysqldata:
    driver: local

# Networks
networks:
  app_01-network:
    driver: bridge